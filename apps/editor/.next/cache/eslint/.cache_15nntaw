[{"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/_app.tsx":"1","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/_document.tsx":"2","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/auth/me.ts":"3","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/editor/login.ts":"4","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/editor/signup.ts":"5","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/hello.ts":"6","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/middle.ts":"7","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addEditCredential.ts":"8","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addEditVideo.ts":"9","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addToLeger.ts":"10","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/fetchVideo.ts":"11","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getAssignedVideo.ts":"12","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getAssignedVideos.ts":"13","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getLegers.ts":"14","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getPutSignedUrl.ts":"15","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getSignedUrl.ts":"16","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getVideos.ts":"17","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/removeFromLeger.ts":"18","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/signedUrls.ts":"19","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/index.tsx":"20","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/login.tsx":"21","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/signup.tsx":"22","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/assigned/[assignedId].tsx":"23","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/assigned/index.tsx":"24","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/edit/index.tsx":"25","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/leger/index.tsx":"26","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/raw/[videoId].tsx":"27","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/raw/index.tsx":"28","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/upload.tsx":"29"},{"size":669,"mtime":1694244159114,"results":"30","hashOfConfig":"31"},{"size":312,"mtime":1694244159114,"results":"32","hashOfConfig":"31"},{"size":1441,"mtime":1694244159114,"results":"33","hashOfConfig":"31"},{"size":1812,"mtime":1694244159114,"results":"34","hashOfConfig":"31"},{"size":2001,"mtime":1694244159114,"results":"35","hashOfConfig":"31"},{"size":307,"mtime":1694244159114,"results":"36","hashOfConfig":"31"},{"size":1168,"mtime":1694244159114,"results":"37","hashOfConfig":"31"},{"size":3450,"mtime":1694244159115,"results":"38","hashOfConfig":"31"},{"size":2422,"mtime":1694244159115,"results":"39","hashOfConfig":"31"},{"size":1877,"mtime":1694244159115,"results":"40","hashOfConfig":"31"},{"size":2608,"mtime":1694244159115,"results":"41","hashOfConfig":"31"},{"size":3744,"mtime":1694244159115,"results":"42","hashOfConfig":"31"},{"size":2190,"mtime":1694244159115,"results":"43","hashOfConfig":"31"},{"size":2067,"mtime":1694244159115,"results":"44","hashOfConfig":"31"},{"size":1698,"mtime":1694244159115,"results":"45","hashOfConfig":"31"},{"size":1800,"mtime":1694244159115,"results":"46","hashOfConfig":"31"},{"size":3004,"mtime":1694244159115,"results":"47","hashOfConfig":"31"},{"size":1054,"mtime":1694244159116,"results":"48","hashOfConfig":"31"},{"size":1653,"mtime":1694244159116,"results":"49","hashOfConfig":"31"},{"size":821,"mtime":1694244159116,"results":"50","hashOfConfig":"31"},{"size":1741,"mtime":1694261159079,"results":"51","hashOfConfig":"31"},{"size":1564,"mtime":1694261148061,"results":"52","hashOfConfig":"31"},{"size":5528,"mtime":1694261225631,"results":"53","hashOfConfig":"31"},{"size":1907,"mtime":1694261212633,"results":"54","hashOfConfig":"31"},{"size":1871,"mtime":1694261200932,"results":"55","hashOfConfig":"31"},{"size":1848,"mtime":1694261186894,"results":"56","hashOfConfig":"31"},{"size":4266,"mtime":1694260330390,"results":"57","hashOfConfig":"31"},{"size":1753,"mtime":1694261178406,"results":"58","hashOfConfig":"31"},{"size":5726,"mtime":1694260347609,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fijq0o",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/_app.tsx",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/_document.tsx",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/auth/me.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/editor/login.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/editor/signup.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/hello.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/middle.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addEditCredential.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addEditVideo.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/addToLeger.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/fetchVideo.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getAssignedVideo.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getAssignedVideos.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getLegers.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getPutSignedUrl.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getSignedUrl.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/getVideos.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/removeFromLeger.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/api/video/signedUrls.ts",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/index.tsx",[],"/Users/phillo/code/youtubeCreator/apps/editor/src/pages/login.tsx",["126"],"import React, { useEffect } from 'react';\nimport { LoginForm } from 'ui';\nimport { LoginType } from 'zodTypes';\nimport axios from 'axios';\nimport { useSetRecoilState } from 'recoil';\nimport { editorIdAtom } from 'store';\nimport { toast } from 'react-hot-toast';\nimport { useRouter } from 'next/router';\n\nconst Login: React.FC = () => {\n\n    const setEditorId = useSetRecoilState(editorIdAtom);\n    const router = useRouter();\n\n    const { BASEURL } = process.env;\n\n    const handleSubmit = (data: LoginType) => {\n        axios({\n            baseURL: BASEURL || 'http://localhost:3001/api',\n            url: '/editor/login',\n            method: 'POST',\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            sessionStorage.setItem('editorToken', response.data.token)\n            setEditorId(response.data._id);\n            toast.success(response.data.message);\n            router.push('/videos/raw');\n        }).catch(err => {\n            if (err) {\n                if (err.response) {\n                    toast.error(err.response.data.message);\n                    return;\n                }\n                toast.error(err.message);\n                return;\n            }\n        })\n\n    }\n\n    useEffect(() => {\n        if (sessionStorage.getItem('editorToken')) {\n            sessionStorage.clear()\n            setEditorId(null);\n            toast.success('Clearing Session :)');\n        }\n    }, [])\n\n    return (\n        <>\n            <div className=\"h-screen bg-gray-100 flex justify-center items-center\">\n                <LoginForm propData={handleSubmit} client='editor' />\n            </div>\n        </>\n    )\n}\n\nexport default Login;","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/signup.tsx",["127"],"import React, { useEffect } from 'react';\nimport { SignUpForm } from 'ui';\nimport {editorSignup } from 'zodTypes';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useSetRecoilState } from 'recoil';\nimport { editorIdAtom } from 'store';\nimport { toast } from 'react-hot-toast';\nimport { useRouter } from 'next/router';\n\nconst Signup: React.FC = () => {\n\n  const setEditorId = useSetRecoilState(editorIdAtom);\n  const router = useRouter();\n\n  const { BASEURL } = process.env;\n\n  const handleSubmit = (data: editorSignup) => {\n    axios({\n      baseURL: BASEURL || 'http://localhost:3001/api',\n      url: '/editor/signup',\n      method: 'POST',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      sessionStorage.setItem('editorToken', response.data.token)\n      setEditorId(response.data._id);\n      toast.success(response.data.message);\n      router.push('/videos/raw');\n    }).catch(err => {\n      if (err) {\n        if (err.response) {\n          toast.error(err.response.data.message);\n          return;\n        }\n        toast.error(err.message);\n        return;\n      }\n    })\n\n  }\n\n  useEffect(() => {\n    if (sessionStorage.getItem('editorToken')) {\n      setEditorId(null);\n      sessionStorage.clear()\n      toast.success('Clearing Session :)');\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"h-screen bg-gray-100 flex justify-center items-center\">\n        <SignUpForm propData={handleSubmit} client='editor' />\n      </div>\n    </>\n  )\n}\n\nexport default Signup;","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/assigned/[assignedId].tsx",["128"],"import React, { useEffect, useState, useRef } from 'react'\nimport protection from '../../../../utils/protection'\nimport { useRouter } from 'next/router';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { assignedVideosAtom, editorEditedVideos, editorIdAtom } from 'store';\nimport { UpdateForm, VideoCard } from 'ui';\nimport { EditVideoType, RawVideoType, UpdateVideoType, editVideoInputType, legerType } from 'zodTypes';\nimport { GetServerSidePropsContext } from 'next';\nimport cookie from 'cookie';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nconst AssignedId: React.FC<{ video: RawVideoType }> = ({ video }) => {\n  const router = useRouter();\n  const { assignedId } = router.query;\n  const [uploaded, setUploaded] = useState<Boolean>();\n  const [localVideo, setVideo] = useState<RawVideoType>();\n  const [assignedVideos, setAssignedVideos] = useRecoilState(assignedVideosAtom);\n  const editorId = useRecoilValue(editorIdAtom);\n  const editVideo = useRef<HTMLInputElement | null>(null);\n  const { NEXT_PUBLIC_BASEURL } = process.env;\n  const setAllEditVideos = useSetRecoilState(editorEditedVideos);\n\n  useEffect(() => {\n    if (!video) {\n      toast.error('Server Error');\n      router.back();\n    }\n    if (video) {\n      setVideo(video);\n      setUploaded(video.isUploaded);\n    }\n  }, []);\n\n  const handleSubmit = (data: editVideoInputType) => {\n    const selectedFile = editVideo.current;\n    if (selectedFile) {\n      axios({\n        baseURL: 'http://localhost:3001/api',\n        url: '/video/getPutSignedUrl',\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': sessionStorage.getItem('editorToken'),\n          'key': data.videoKey,\n          'bucketname': 'creator-edit-video'\n        }\n      }).then(response => {\n\n        if (response.status == 200) {\n          axios({\n            url: response.data.presignedUrl,\n            method: 'PUT',\n            data: selectedFile.files[0],\n            headers: {\n              'Content-Type': selectedFile.type,\n            },\n          }).then(response => {\n\n            if (response.status == 200) {\n\n\n              axios({\n                baseURL: 'http://localhost:3001/api',\n                url: `/video/addEditVideo`,\n                method: 'POST',\n                data: data,\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': sessionStorage.getItem('editorToken'),\n                }\n              }).then(response => {\n                if (response.status == 200) {\n\n                  setAllEditVideos(pre => [...pre, response.data.video]);\n                  toast.success(response.data.message);\n                  router.push('/videos/edit');\n                }\n              }).catch(err => {\n                if (err) {\n                  if (err.response && (err.response.status == 403)) {\n                    toast.error(err.response.data.message);\n                    sessionStorage.clear()\n                    router.push('/login');\n                  } else if (err.response.status == 401) {\n                    toast.error('Please first allow us your youtube access');\n                    router.push('/auth')\n                  }\n                } else if (err.response) {\n                  toast.error(err.response.data.message);\n                }\n                console.log(err)\n              })\n            }\n\n          }).catch(err => {\n            if (err) {\n              if (err.response && (err.response.status == 403 || err.response.status == 401)) {\n                toast.error(err.response.data.message);\n                sessionStorage.clear()\n                router.push('/login');\n              }\n            } else if (err.response) {\n              toast.error(err.response.data.message);\n            }\n            console.log(err)\n          })\n        }\n\n      }).catch(err => {\n        if (err) {\n          if (err.response && (err.response.status == 403 || err.response.status == 401)) {\n            toast.error(err.response.data.message);\n          }\n        } else if (err.response) {\n          toast.error('Video Uploading Error, Aws')\n          toast.error(err.response.data.message);\n        }\n        console.log(err)\n\n      })\n    }\n\n  }\n\n  return (\n    <>\n      <div className=\"h-full  bg-gray-100 flex justify-around py-6\">\n        {localVideo && <VideoCard video={localVideo} type='raw' clientId={editorId} client='editor' page='video' />}\n        <div className=\"flex flex-col gap-y-8\">\n\n          {localVideo && <UpdateForm video={localVideo} fileRef={editVideo} type='assigned' propData={handleSubmit} />}\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n  const { assignedId } = context.params;\n  const { BASEURL } = process.env;\n\n  const cookies = context.req.headers.cookie;\n  const parsedCookies = cookie.parse(cookies || '');\n  const token = parsedCookies.editorToken;\n\n  try {\n\n    const response = await axios({\n      baseURL: BASEURL,\n      url: '/video/getAssignedVideo',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token,\n        'videoId': assignedId\n      }\n    });\n    return {\n      props: {\n        video: response.data.video\n      }\n    }\n\n  } catch (error) {\n    console.log(error);\n    return {\n      props: {\n        video: {}\n      }\n    }\n  }\n}\n\nexport default protection(AssignedId)","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/assigned/index.tsx",["129"],"import React, { useEffect } from 'react'\nimport protection from '../../../../utils/protection'\nimport { GetServerSidePropsContext } from 'next';\nimport cookie from 'cookie';\nimport axios from 'axios';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { assignedVideosAtom, editorIdAtom } from 'store';\nimport { legerType } from 'zodTypes';\nimport { VideoCard } from 'ui';\n\nconst Assigned: React.FC<{ assigned: legerType[] }> = ({ assigned }) => {\n    const [assignedVideos, setAssignedVideos] = useRecoilState(assignedVideosAtom);\n    const editorId = useRecoilValue(editorIdAtom);\n\n    useEffect(() => {\n        setAssignedVideos(assigned);\n    }, [])\n\n    return (\n        <>\n            <div className=\"flex flex-wrap p-10 gap-8 justify-center items-center h-screen bg-gray-100\">\n                {/* @ts-ignore */}\n                {assignedVideos.length > 0 && assignedVideos.map(rv => <VideoCard clientId={editorId} key={rv._id} video={rv.rawVideo} type='assigned' />)}\n            </div>\n        </>\n    )\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n    const cookies = context.req.headers.cookie;\n    const parsedCookies = cookie.parse(cookies || '');\n    const token = parsedCookies.editorToken;\n\n    const { BASEURL } = process.env;\n\n    try {\n\n        const response = await axios({\n            baseURL: BASEURL,\n            url: '/video/getAssignedVideos',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n            }\n        });\n\n        return {\n            props: {\n                assigned: response.data.video\n            }\n        }\n\n    } catch (error) {\n        console.log(error);\n        return {\n            props: {\n                assigned: [],\n                error\n            }\n        }\n    }\n}\n\nexport default protection(Assigned);\n\n","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/edit/index.tsx",["130"],"import React, { useEffect, useState } from 'react'\nimport { GetServerSidePropsContext } from 'next';\nimport cookie from 'cookie';\nimport axios from 'axios';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { allRawVideoEditor, editorEditedVideos, editorIdAtom } from 'store';\nimport { EditVideoType, RawVideoType } from 'zodTypes';\nimport { VideoCard } from 'ui';\nimport protection from '../../../../utils/protection';\n\nconst Index: React.FC<{ videos: RawVideoType[] }> = ({ videos }) => {\n  const [editVideos, setEditedVideos] = useRecoilState(editorEditedVideos);\n  const editorId = useRecoilValue(editorIdAtom);\n  const [localVideos, setVideos] = useState<EditVideoType[]>();\n\n  useEffect(() => {\n    if(videos) {\n      setEditedVideos(videos);\n      setVideos(videos);\n    }\n  }, []);\n  \n\n  return (\n    <>\n      <div className=\"flex flex-wrap p-10 gap-8 justify-center items-center h-screen bg-gray-100\">\n        {localVideos && localVideos.map(rv => <VideoCard clientId={editorId} client='editor'  key={rv._id} video={rv} type='edit' />)}\n      </div>\n    </>\n  )\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n    const cookies = context.req.headers.cookie;\n    const parsedCookies = cookie.parse(cookies || '');\n    const token = parsedCookies.editorToken;\n\n    const { BASEURL } = process.env;\n    if(!BASEURL || BASEURL.length == 0) {\n        throw Error('Please Add API `BASERURL` in environment variable');\n    }\n\n    const response = await axios({ \n      baseURL: BASEURL || 'http://localhost:3001/api',\n      url: '/video/getVideos',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token,\n        'type': 'edit'\n      }\n     });\n\n    return {\n      props: {\n        videos: response.data.edit\n      }\n    }\n    \n\n}\n\nexport default protection(Index)","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/leger/index.tsx",["131"],"import { GetServerSidePropsContext } from 'next';\nimport React, { useEffect } from 'react';\nimport cookie from 'cookie';\nimport axios from 'axios';\nimport { legerType } from 'zodTypes';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { editorIdAtom, legersAtom } from 'store';\nimport { LegerCard } from 'ui';\nimport protection from '../../../../utils/protection';\n\nconst Index: React.FC<{ legers: legerType[] }> = ({ legers }) => {\n\n  const [localLegers, setLegers] = useRecoilState(legersAtom);\n  const editorId = useRecoilValue(editorIdAtom);\n  const setAllLegers = useSetRecoilState(legersAtom);\n\n  useEffect(() => {\n    if(localLegers.length === 0) {\n      setLegers(legers);\n      setAllLegers(legers)\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"h-screen bg-gray-100 flex flex-wrap justify-center items-center gap-16\">\n        {localLegers && localLegers.map(lc => <LegerCard clientId={editorId} key={lc._id} leger={lc} />)}\n      </div>\n    </>\n  );\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n  try {\n\n    const cookies = context.req.headers.cookie;\n    const parsedCookies = cookie.parse(cookies || '');\n    const token = parsedCookies.editorToken;\n\n    const { BASEURL } = process.env;\n\n    const response = await axios({\n      baseURL: BASEURL || 'http://localhost:3001/api',\n      url: '/video/getLegers',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n\n    const legers = response.data.legers;\n\n    return {\n      props: {\n        legers: legers\n      }\n    }\n  } catch (error) {\n    if(error) {\n      console.log(error);\n      throw Error('Internal Error');\n    }\n    return {\n      props: {\n        legers: []\n      }\n    }\n  }\n\n\n}\n\nexport default protection(Index);","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/raw/[videoId].tsx",["132"],"import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Video } from 'ui';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { allRawVideoEditor, editorIdAtom, legersAtom } from 'store';\nimport { toast } from 'react-hot-toast';\nimport { RawVideoType, RemoveFromLegerType, fetchVideoReqType, legerInType } from 'zodTypes';\nimport { GetServerSidePropsContext } from 'next/types';\nimport axios from 'axios';\nimport cookie from 'cookie';\nimport protection from '../../../../utils/protection';\n\n\nconst VideoPage: React.FC<{ video: RawVideoType, hasApplied: boolean }> = ({ video, hasApplied }) => {\n  const [localVideo, setVideo] = useState<RawVideoType>();\n  const [applied, setApplied] = useState<boolean>();\n  const router = useRouter();\n  const { videoId } = router.query;\n  const setLegers = useSetRecoilState(legersAtom);\n  const editorId = useRecoilValue(editorIdAtom);\n\n  useEffect(() => {\n    if(videoId) {\n      // const video = rawVideos.find(raw => raw._id == videoId);\n      if(!video) {\n        toast.error('Server Error');\n        router.back();\n      } if(video) {\n        setVideo(video);\n        setApplied(hasApplied);\n      }\n    }\n  }, []);\n\n  const handleLeger = () => {\n    const data: legerInType = {\n      rawVideo: localVideo._id,\n      creator: localVideo.creator._id\n    };\n    axios({\n      baseURL: 'http://localhost:3001/api',\n      url: '/video/addToLeger',\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': sessionStorage.getItem('editorToken')\n      },\n      data: data\n    }).then(response => {\n      setLegers(legers => [...legers, response.data.leger]);\n      setApplied(true);\n      toast.success(response.data.message);\n      // router.push('/videos/leger');\n    }).catch(err => {\n      if(err) {\n        if(err.response) {\n          toast.error(err.response.data.message);\n          // router.push('/videos/leger');\n          return;\n        }\n          toast.error(err.message);\n          console.log(err);\n      }\n    })\n  }\n\n  const removeFromLeger = () => {\n\n    const data: RemoveFromLegerType = {videoId: localVideo._id};\n\n    axios({\n      baseURL: 'http://localhost:3001/api',\n      url: '/video/removeFromLeger',\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'appliacation/json',\n        'Authorization': sessionStorage.getItem('editorToken')\n      },\n      data: data\n    }).then(response => {\n\n      setLegers(lgs => {\n        return lgs.map(lg => {\n          if (lg.rawVideo._id === localVideo._id) {\n              return {\n                  ...lg,\n                  editors: lg.editors.filter(ed => ed._id !== editorId)\n              };\n          }\n          return lg \n        });\n      });\n\n      setApplied(false);\n      toast.success(response.data.message);\n\n    }).catch(err => {\n      if (err) {\n        if (err.response) {\n            toast.error(err.response.data.message);\n            return;\n        }\n        toast.error(err.message);\n        console.log(err)\n        return;\n    }\n    })\n  }\n\n  return (\n    <>\n    <div className=\"h-screen bg-gray-100 flex justify-around items-center\">\n\n      {localVideo && <Video removeFromLeger={removeFromLeger} video={localVideo} hasApplied={applied}  type={'raw'} addToLeger={handleLeger} />}\n    </div>\n    </>\n  )\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n  const {videoId} = context.params;\n  const { BASEURL } = process.env;\n\n  const cookies = context.req.headers.cookie;\n  const parsedCookies = cookie.parse(cookies || '');\n  const token = parsedCookies.editorToken;\n\n  const data: fetchVideoReqType = {\n    videoId: videoId as string,\n    type: 'raw'\n  }\n\n  try {\n    const response = await axios({\n      baseURL: BASEURL,\n      url: '/video/fetchVideo',\n      method: 'POST',\n      data: data,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n\n    \n    return {\n      props: {\n        video: response.data.video,\n        hasApplied: response.data.hasApplied\n      }\n    }\n\n  } catch (error) {\n    return { \n      props: {\n        video: null\n      }\n    }    \n  }\n\n  \n}\n\nexport default protection(VideoPage);","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/raw/index.tsx",["133"],"import React, { useEffect, useState } from 'react'\nimport { GetServerSidePropsContext } from 'next';\nimport cookie from 'cookie';\nimport axios from 'axios';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { allRawVideoEditor, editorIdAtom } from 'store';\nimport { RawVideoType } from 'zodTypes';\nimport { VideoCard } from 'ui';\nimport protection from '../../../../utils/protection';\n\nconst Index: React.FC<{ videos: RawVideoType[] }> = ({ videos }) => {\n  const [rawVideos, setRawVideos] = useRecoilState(allRawVideoEditor);\n  const editorId = useRecoilValue(editorIdAtom);\n\n  useEffect(() => {\n    if(videos) {\n      setRawVideos(videos);\n    }\n  }, []);\n  \n\n  return (\n    <>\n      <div className=\"flex flex-wrap p-10 gap-8 justify-center items-center h-screen bg-gray-100\">\n        {/* @ts-ignore */}\n        {rawVideos.length > 0 && rawVideos.map(rv => <VideoCard clientId={editorId}  key={rv._id} video={rv} type='raw' />)}\n      </div>\n    </>\n  )\n}\n\nexport async function getServerSideProps(context: GetServerSidePropsContext) {\n    const cookies = context.req.headers.cookie;\n    const parsedCookies = cookie.parse(cookies || '');\n    const token = parsedCookies.editorToken;\n\n    const { BASEURL } = process.env;\n    if(!BASEURL || BASEURL.length == 0) {\n        throw Error('Please Add API `BASERURL` in environment variable');\n    }\n\n    const response = await axios({ \n      baseURL: BASEURL || 'http://localhost:3001/api',\n      url: '/video/getVideos',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token,\n        'type': 'raw'\n      }\n     });\n    return {\n      props: {\n        videos: response.data.raw\n      }\n    }\n    \n\n}\n\nexport default protection(Index)","/Users/phillo/code/youtubeCreator/apps/editor/src/pages/videos/upload.tsx",[],{"ruleId":"134","severity":1,"message":"135","line":50,"column":8,"nodeType":"136","endLine":50,"endColumn":10,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"135","line":51,"column":6,"nodeType":"136","endLine":51,"endColumn":8,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"139","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":8,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"141","line":17,"column":8,"nodeType":"136","endLine":17,"endColumn":10,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"143","line":21,"column":6,"nodeType":"136","endLine":21,"endColumn":8,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"145","line":22,"column":6,"nodeType":"136","endLine":22,"endColumn":8,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":8,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":19,"column":6,"nodeType":"136","endLine":19,"endColumn":8,"suggestions":"150"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setEditorId'. Either include it or remove the dependency array.","ArrayExpression",["151"],["152"],"React Hook useEffect has missing dependencies: 'router' and 'video'. Either include them or remove the dependency array. If 'setVideo' needs the current value of 'video', you can also switch to useReducer instead of useState and read 'video' in the reducer.",["153"],"React Hook useEffect has missing dependencies: 'assigned' and 'setAssignedVideos'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'setEditedVideos' and 'videos'. Either include them or remove the dependency array. If 'setVideos' needs the current value of 'videos', you can also switch to useReducer instead of useState and read 'videos' in the reducer.",["155"],"React Hook useEffect has missing dependencies: 'legers', 'localLegers.length', 'setAllLegers', and 'setLegers'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'hasApplied', 'router', 'video', and 'videoId'. Either include them or remove the dependency array. If 'setVideo' needs the current value of 'video', you can also switch to useReducer instead of useState and read 'video' in the reducer.",["157"],"React Hook useEffect has missing dependencies: 'setRawVideos' and 'videos'. Either include them or remove the dependency array.",["158"],{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [setEditorId]",{"range":"174","text":"175"},{"range":"176","text":"175"},"Update the dependencies array to be: [router, video]",{"range":"177","text":"178"},"Update the dependencies array to be: [assigned, setAssignedVideos]",{"range":"179","text":"180"},"Update the dependencies array to be: [setEditedVideos, videos]",{"range":"181","text":"182"},"Update the dependencies array to be: [legers, localLegers.length, setAllLegers, setLegers]",{"range":"183","text":"184"},"Update the dependencies array to be: [hasApplied, router, video, videoId]",{"range":"185","text":"186"},"Update the dependencies array to be: [setRawVideos, videos]",{"range":"187","text":"188"},[1497,1499],"[setEditorId]",[1350,1352],[1350,1352],"[router, video]",[663,665],"[assigned, setAssignedVideos]",[799,801],"[setEditedVideos, videos]",[753,755],"[legers, localLegers.length, setAllLegers, setLegers]",[1231,1233],"[hasApplied, router, video, videoId]",[667,669],"[setRawVideos, videos]"]